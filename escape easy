local Library = loadstring(Game:HttpGet("https://raw.githubusercontent.com/bloodball/-back-ups-for-libs/main/wizard"))()
local Window = Library:NewWindow("Script")
 
local Tab = Window:NewSection("Credits: TGMANKASKE")
 
Tab:CreateToggle("Inf WalkSpeed", function(no)
_G.GetWins = no
while _G.GetWins== true do
    wait(0.3)
 
local args = {
	"WalkingSpeedGain",
	9999999999
}
game:GetService("ReplicatedStorage"):WaitForChild("SpeedBoost"):FireServer(unpack(args))
 
end
end)
 
 
Tab:CreateButton("Twenty Teleport (with noclip)", function()
    local Players = game:GetService("Players")
    local RunService = game:GetService("RunService")
    local Workspace = game:GetService("Workspace")
 
    local player = Players.LocalPlayer
    if not player then warn("Jogador local não encontrado!") return end
 
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local humanoid = character:FindFirstChildOfClass("Humanoid")
 
    local speed = 250 -- studs por segundo, ajustável
 
    -- Ativa noclip (sem colisão)
    local function enableNoclip()
        RunService.Stepped:Connect(function()
            for _, part in pairs(character:GetDescendants()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end)
    end
 
    -- Teleporta suavemente até uma posição
    local function moveTo(targetPos)
        return task.spawn(function()
            local finished = false
            local connection
            connection = RunService.Heartbeat:Connect(function(dt)
                if not humanoidRootPart or not humanoidRootPart.Parent then
                    connection:Disconnect()
                    return
                end
 
                local currentPos = humanoidRootPart.Position
                local dir = (targetPos - currentPos)
                local dist = dir.Magnitude
 
                if dist < 1 then
                    humanoidRootPart.CFrame = CFrame.new(targetPos)
                    connection:Disconnect()
                    finished = true
                    return
                end
 
                local move = math.min(speed * dt, dist)
                humanoidRootPart.CFrame = humanoidRootPart.CFrame + dir.Unit * move
            end)
 
            -- Espera até a movimentação acabar
            while not finished do task.wait() end
        end)
    end
 
    -- Lista de pontos em ordem
    local positions = {
        Workspace:FindFirstChild("Map") and Workspace.Map:FindFirstChild("cp2"),
        Workspace:FindFirstChild("Map") and Workspace.Map:FindFirstChild("cp3"),
        Workspace:FindFirstChild("Map") and Workspace.Map:FindFirstChild("cp4"),
        Workspace:FindFirstChild("cp5"),
        Workspace:FindFirstChild("cp6"),
        Workspace:FindFirstChild("cp7"),
        Workspace:FindFirstChild("cp8"),
        Workspace:FindFirstChild("cp9"),
        Vector3.new(5732, 1061, 89) -- posição final
    }
 
    enableNoclip()
 
    -- Executa a sequência
    task.spawn(function()
        for _, point in ipairs(positions) do
            local targetPos = typeof(point) == "Instance" and point.Position or point
            print("Teleportando para:", targetPos)
            moveTo(targetPos)
            task.wait(0.5) -- espera entre os pontos
        end
        print("Twenty teleport finalizado.")
    end)
end)
